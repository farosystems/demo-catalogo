-- Script para crear la tabla plan_categoria
-- Esta tabla relaciona planes de financiación con categorías

-- Crear tabla plan_categoria si no existe
CREATE TABLE IF NOT EXISTS plan_categoria (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    fk_id_plan BIGINT NOT NULL,
    fk_id_categoria BIGINT NOT NULL,
    activo BOOLEAN NOT NULL DEFAULT true,
    CONSTRAINT plan_categoria_pkey PRIMARY KEY (id),
    CONSTRAINT plan_categoria_fk_id_plan_fkey FOREIGN KEY (fk_id_plan) REFERENCES planes_financiacion(id) ON DELETE CASCADE,
    CONSTRAINT plan_categoria_fk_id_categoria_fkey FOREIGN KEY (fk_id_categoria) REFERENCES categoria(id) ON DELETE CASCADE,
    CONSTRAINT plan_categoria_unique UNIQUE (fk_id_plan, fk_id_categoria)
);

-- Crear índices para mejorar el rendimiento
CREATE INDEX IF NOT EXISTS plan_categoria_fk_id_plan_idx ON plan_categoria USING btree (fk_id_plan);
CREATE INDEX IF NOT EXISTS plan_categoria_fk_id_categoria_idx ON plan_categoria USING btree (fk_id_categoria);
CREATE INDEX IF NOT EXISTS plan_categoria_activo_idx ON plan_categoria USING btree (activo);

-- Verificar que la tabla se creó correctamente
SELECT 'Tabla plan_categoria creada:' as info;
SELECT COUNT(*) as total_registros FROM plan_categoria;

-- Mostrar la estructura de la tabla
SELECT 'Estructura de la tabla:' as info;
SELECT column_name, data_type, is_nullable
FROM information_schema.columns 
WHERE table_schema = 'public' 
AND table_name = 'plan_categoria'
ORDER BY ordinal_position;

-- Comentarios sobre la tabla
COMMENT ON TABLE plan_categoria IS 'Tabla que relaciona planes de financiación con categorías';
COMMENT ON COLUMN plan_categoria.fk_id_plan IS 'ID del plan de financiación';
COMMENT ON COLUMN plan_categoria.fk_id_categoria IS 'ID de la categoría';
COMMENT ON COLUMN plan_categoria.activo IS 'Indica si la asociación está activa';
